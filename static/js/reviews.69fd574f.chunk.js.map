{"version":3,"file":"static/js/reviews.69fd574f.chunk.js","mappings":"qQAIe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAWC,EAAAA,EAAAA,MAAXD,OAEFE,EAAK,mCAAG,WAAMF,GAAN,iGAESG,EAAAA,EAAAA,IAAkBH,GAF3B,OAGiB,KADrBJ,EAFI,QAGDQ,eACPP,EAAQD,GAJA,gDAOVC,EAAQ,MACRE,EAAS,mBARC,yDAAH,sDAgBX,OAJAM,EAAAA,EAAAA,YAAU,WACRH,EAAMF,KACL,CAACA,KAGF,gCACGF,IAAS,wBAAKA,IACdF,GACC,wBACGA,EAAKU,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OAChB,2BACE,qCAAaF,EAAb,QACA,uBAAIC,MAFGC,SAOb,0E,0MCrCFC,EAAM,mCACZC,IAAAA,SAAAA,QAAyB,gCAElB,IAEMC,EAAgB,mCAAG,WAAMC,GAAN,uFACPF,IAAAA,IAAA,+BACGD,EADH,qDACmDG,IAF5C,cACxBC,EADwB,yBAIvBA,EAASnB,MAJc,2CAAH,sDAOhBoB,EAAkB,mCAAG,oGACTJ,IAAAA,IAAA,qCAAwCD,IAD/B,cAC1BI,EAD0B,yBAEzBA,EAASnB,MAFgB,2CAAH,qDAKlBqB,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,IAAAA,IAAA,gBACZM,EADY,oBACOP,EADP,oBADQ,cACzBI,EADyB,yBAIxBA,EAASnB,MAJe,2CAAH,sDAOjBuB,EAAiB,mCAAG,WAAMD,GAAN,uFACRN,IAAAA,IAAA,gBACZM,EADY,4BACeP,EADf,oBADQ,cACzBI,EADyB,yBAIxBA,EAASnB,MAJe,2CAAH,sDAOjBO,EAAiB,mCAAG,WAAMe,GAAN,uFACRN,IAAAA,IAAA,gBACZM,EADY,4BACeP,EADf,oBADQ,cACzBI,EADyB,yBAIxBA,EAASnB,MAJe,2CAAH","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { fetchMovieReviews } from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nexport default function Reviews() {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { postId } = useParams();\n\n  const fetch = async postId => {\n    try {\n      const data = await fetchMovieReviews(postId);\n      if (data.total_results !== 0) {\n        setData(data);\n      }\n    } catch (error) {\n      setData(null);\n      setError('Error server!!!');\n    }\n  };\n\n  useEffect(() => {\n    fetch(postId);\n  }, [postId]);\n\n  return (\n    <>\n      {error && <h2>{error}</h2>}\n      {data ? (\n        <ul>\n          {data.results.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>Author: {author} </h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie.</p>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst key = '967c6f14dacb0ca10f1175f7851a5869';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const t = 5;\n\nexport const fetchSearchMovie = async search => {\n  const response = await axios.get(\n    `search/movie?api_key=${key}&language=en-US&include_adult=false&query=${search}`\n  );\n  return response.data;\n};\n\nexport const fetchTrendingMovie = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US`\n  );\n  return response.data;\n};\n"],"names":["Reviews","useState","data","setData","error","setError","postId","useParams","fetch","fetchMovieReviews","total_results","useEffect","results","map","author","content","id","key","axios","fetchSearchMovie","search","response","fetchTrendingMovie","fetchMovieDetails","movieId","fetchMovieCredits"],"sourceRoot":""}