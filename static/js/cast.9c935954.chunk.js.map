{"version":3,"file":"static/js/cast.9c935954.chunk.js","mappings":"qRAEaA,EAAaC,EAAAA,EAAAA,GAAH,6RCAVC,EAAQD,EAAAA,EAAAA,IAAH,kKCALE,EAAOF,EAAAA,EAAAA,GAAH,gW,mBCMF,SAASG,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OAEFE,EAAK,mCAAG,WAAMF,GAAN,iGAESG,EAAAA,EAAAA,IAAkBH,GAF3B,OAEJJ,EAFI,OAGVC,EAAQD,EAAKQ,MAHH,gDAKVP,EAAQ,MACRE,EAAS,mBANC,yDAAH,sDAcX,OAJAM,EAAAA,EAAAA,YAAU,WACRH,EAAMF,KACL,CAACA,KAGF,gCACGF,IAAS,wBAAKA,IACdF,IACC,SAACN,EAAD,UACGM,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,UAACjB,EAAD,YACE,SAACD,EAAD,CACEmB,IACGF,EAAD,0CAEuCA,GADnCG,EAGNC,MAAM,OACNC,IAAKN,KAEP,uBAAIA,KACJ,uCAAeD,OAXNG,a,0MC/BjBK,EAAM,mCACZC,IAAAA,SAAAA,QAAyB,gCAElB,IAEMC,EAAgB,mCAAG,WAAMC,GAAN,uFACPF,IAAAA,IAAA,+BACGD,EADH,qDACmDG,IAF5C,cACxBC,EADwB,yBAIvBA,EAASvB,MAJc,2CAAH,sDAOhBwB,EAAkB,mCAAG,oGACTJ,IAAAA,IAAA,qCAAwCD,IAD/B,cAC1BI,EAD0B,yBAEzBA,EAASvB,MAFgB,2CAAH,qDAKlByB,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,IAAAA,IAAA,gBACZM,EADY,oBACOP,EADP,oBADQ,cACzBI,EADyB,yBAIxBA,EAASvB,MAJe,2CAAH,sDAOjBO,EAAiB,mCAAG,WAAMmB,GAAN,uFACRN,IAAAA,IAAA,gBACZM,EADY,4BACeP,EADf,oBADQ,cACzBI,EADyB,yBAIxBA,EAASvB,MAJe,2CAAH,sDAOjB2B,EAAiB,mCAAG,WAAMD,GAAN,uFACRN,IAAAA,IAAA,gBACZM,EADY,4BACeP,EADf,oBADQ,cACzBI,EADyB,yBAIxBA,EAASvB,MAJe,2CAAH,uD","sources":["components/Cast/CastomList.styles.js","components/Cast/Image.styles.js","components/Cast/Item.styles.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastomList = styled.ul`\n  max-width: calc(100vw - 70px);\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 10px 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 320px;\n  padding-bottom: 5px;\n  object-fit: contain;\n  background: radial-gradient(#aaa 33%, #ffffff 100%);\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding: 5px;\n\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n  text-align: center;\n`;\n","import { fetchMovieCredits } from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { CastomList } from './CastomList.styles';\nimport { Image } from './Image.styles';\nimport { Item } from './Item.styles';\nimport noFoto from '../../images/noFoto.png';\n\nexport default function Cast() {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const { postId } = useParams();\n\n  const fetch = async postId => {\n    try {\n      const data = await fetchMovieCredits(postId);\n      setData(data.cast);\n    } catch (error) {\n      setData(null);\n      setError('Error server!!!');\n    }\n  };\n\n  useEffect(() => {\n    fetch(postId);\n  }, [postId]);\n\n  return (\n    <>\n      {error && <h2>{error}</h2>}\n      {data && (\n        <CastomList>\n          {data.map(({ character, name, profile_path, id }) => (\n            <Item key={id}>\n              <Image\n                src={\n                  !profile_path\n                    ? noFoto\n                    : `https://image.tmdb.org/t/p/w500/${profile_path}`\n                }\n                width=\"50px\"\n                alt={name}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </Item>\n          ))}\n        </CastomList>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst key = '967c6f14dacb0ca10f1175f7851a5869';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const t = 5;\n\nexport const fetchSearchMovie = async search => {\n  const response = await axios.get(\n    `search/movie?api_key=${key}&language=en-US&include_adult=false&query=${search}`\n  );\n  return response.data;\n};\n\nexport const fetchTrendingMovie = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US`\n  );\n  return response.data;\n};\n"],"names":["CastomList","styled","Image","Item","Cast","useState","data","setData","error","setError","postId","useParams","fetch","fetchMovieCredits","cast","useEffect","map","character","name","profile_path","id","src","noFoto","width","alt","key","axios","fetchSearchMovie","search","response","fetchTrendingMovie","fetchMovieDetails","movieId","fetchMovieReviews"],"sourceRoot":""}